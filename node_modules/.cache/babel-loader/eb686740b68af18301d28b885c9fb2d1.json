{"ast":null,"code":"var _jsxFileName = \"/Users/ruslankalyniak/my-ap/src/component/mainSreeen/MainSreen.jsx\";\nimport React from 'react';\nimport { TodoForm } from '../todoForm';\nimport { Route, Link } from 'react-router-dom';\nimport { EditTodo } from '../editTodo';\nimport { Modal } from '../modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst todoList = [{\n  id: 1,\n  name: 'test1'\n}, {\n  id: 2,\n  name: 'test2'\n}, {\n  id: 3,\n  name: 'test3'\n}];\nexport class MainScreen extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [...todoList],\n      modal: true,\n      targetId: ''\n    };\n\n    this.addTodo = value => {\n      const {\n        todos\n      } = this.state;\n\n      if (value) {\n        this.setState(prev => ({\n          todos: [...prev.todos, {\n            id: todos[todos.length - 1].id + 1,\n            name: value,\n            title: 'rrrrrrrr'\n          }]\n        }));\n      }\n\n      return;\n    };\n\n    this.deleteTodos = event => {\n      this.setState(prev => ({\n        targetId: event.target.value\n      }));\n      this.setState(prev => ({\n        modal: !prev.modal\n      }));\n    };\n\n    this.chench = decision => {\n      const {\n        targetId\n      } = this.state;\n      this.setState(prev => ({\n        modal: !prev.modal\n      }));\n\n      if (decision) {\n        this.setState(prev => ({\n          todos: prev.todos.filter(todo => todo.id !== +targetId)\n        }));\n      }\n    };\n\n    this.changeTodoName = (name, id) => {\n      this.setState(prev => ({\n        todos: prev.todos.map(todo => {\n          if (todo.id === id) {\n            todo.name = name;\n          }\n\n          return todo;\n        })\n      }));\n    };\n  }\n\n  render() {\n    const {\n      todos,\n      modal\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"TODO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/listTodos\",\n        children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n          addTodo: this.addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: todo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/${todo.name}`,\n              children: \"edit Todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            value: todo.id,\n            onClick: event => this.deleteTodos(event),\n            children: \"delete Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(Route, {\n        path: `/${todo.name}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Old Todo: - \", todo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(EditTodo, {\n          todo: todo,\n          changeTodoName: this.changeTodoName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        modal: modal,\n        chench: this.chench\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/ruslankalyniak/my-ap/src/component/mainSreeen/MainSreen.jsx"],"names":["React","TodoForm","Route","Link","EditTodo","Modal","todoList","id","name","MainScreen","Component","state","todos","modal","targetId","addTodo","value","setState","prev","length","title","deleteTodos","event","target","chench","decision","filter","todo","changeTodoName","map","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TodoForm } from '../todoForm';\nimport {\n  Route,\n  Link\n} from 'react-router-dom';\nimport { EditTodo } from '../editTodo';\nimport { Modal } from '../modal/Modal';\n\nconst todoList = [\n  {id: 1, name: 'test1'},\n  {id: 2, name: 'test2'},\n  {id: 3, name: 'test3'},\n]\n\nexport class MainScreen extends React.Component {\n  state = {\n    todos: [...todoList],\n    modal: true,\n    targetId: '',\n\n  }\n\n  addTodo = (value) => {\n    const { todos } = this.state;\n\n    if(value) {\n      this.setState(prev => ({\n        todos: [\n          ...prev.todos,\n          {\n            id: todos[todos.length - 1].id + 1,\n            name: value,\n            title: 'rrrrrrrr',\n          }\n        ]\n      }))\n    }\n\n    return;\n  }\n\n  deleteTodos = (event) => {\n\n    this.setState(prev =>({\n      targetId: event.target.value\n    }))\n\n    this.setState(prev =>({\n      modal: !prev.modal\n    }))\n\n  }\n\n  chench = (decision) => {\n    const { targetId } = this.state;\n\n    this.setState(prev =>({\n      modal: !prev.modal\n    }))\n\n    if (decision) {\n      this.setState(prev =>({\n        todos: prev.todos.filter(todo => todo.id !== +targetId)\n      }))\n    }\n  \n  }\n\n  changeTodoName = (name, id) => {\n    this.setState(prev =>({\n      todos: prev.todos.map(todo => {\n        if (todo.id === id) {\n          todo.name = name\n        }\n\n        return todo\n      })\n    }))\n  }\n\n  render() {\n    const { todos, modal } = this.state;\n \n    return (\n      <>      \n        <Route>\n          <h1>TODO</h1>\n        </Route>\n        <Route path='/listTodos'>\n          <TodoForm addTodo={this.addTodo}/>\n          {\n           todos.map(todo => (\n              <>\n                <div>{todo.name}</div>\n                <button>\n                  <Link to={`/${todo.name}`}>\n                    edit Todo\n                  </Link>\n                </button>\n                <button\n                  value={todo.id}\n                  onClick={(event) => (\n                    this.deleteTodos(event)\n                  )}\n                >\n                  delete Todo\n                </button>\n              </>\n            ))\n          }\n        </Route>\n        {\n          todos.map(todo => (\n            <Route path={`/${todo.name}`}>\n              <div>Old Todo: - {todo.name}</div>\n              <EditTodo todo={todo} changeTodoName={this.changeTodoName} />\n            </Route>\n          ))\n        }\n        <Modal modal={modal} chench={this.chench} />\n      </>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}