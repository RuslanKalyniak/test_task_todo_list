{"ast":null,"code":"var _jsxFileName = \"/Users/ruslankalyniak/my-ap/src/component/main/Main.jsx\";\nimport React from 'react';\nimport { TodoForm } from '../todoForm';\nimport { Route, Link } from 'react-router-dom';\nimport { EditTodo } from '../editTodo';\nimport { Modal } from '../modal/Modal';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListItem from '@material-ui/core/ListItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todoList = [{\n  id: 1,\n  name: 'test1'\n}, {\n  id: 2,\n  name: 'test2'\n}, {\n  id: 3,\n  name: 'test3'\n}];\nexport class Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [...todoList],\n      modal: true,\n      targetId: '',\n      modalMain: true\n    };\n\n    this.addTodo = value => {\n      const {\n        todos\n      } = this.state;\n\n      if (value) {\n        this.setState(prev => ({\n          todos: [...prev.todos, {\n            id: todos[todos.length - 1].id + 1,\n            name: value\n          }]\n        }));\n      }\n\n      return;\n    };\n\n    this.deleteTodos = id => {\n      this.setState({\n        targetId: id\n      });\n      this.setState(prev => ({\n        modal: !prev.modal\n      }));\n    };\n\n    this.confirmation = decision => {\n      const {\n        targetId\n      } = this.state;\n      this.setState(prev => ({\n        modal: !prev.modal\n      }));\n\n      if (decision) {\n        this.setState(prev => ({\n          todos: prev.todos.filter(todo => todo.id !== +targetId)\n        }));\n      }\n    };\n\n    this.changeTodoName = (name, id) => {\n      this.setState(prev => ({\n        todos: prev.todos.map(todo => {\n          if (todo.id === id) {\n            todo.name = name;\n          }\n\n          return todo;\n        })\n      }));\n      localStorage.setItem('id', JSON.stringify(this.state.todos));\n      console.log(this.state.todos);\n    };\n  }\n\n  componentDidMount() {\n    // this.setState({\n    //   todos: this.state.todos.map(todo => {\n    //     if (todo.id === +localStorage.getItem('id')) {\n    //       todo.name = localStorage.getItem('name')\n    //     }\n    //     return todo\n    //   })\n    // })\n    let result = localStorage.getItem('id');\n    console.log(JSON.parse(result));\n\n    if (result) {\n      console.log(111);\n    } else {\n      console.log(222);\n    }\n  }\n\n  render() {\n    const {\n      todos,\n      modal,\n      modalMain\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/listTodos\",\n          className: \"container__child\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"TODO - List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/listTodos\",\n        children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n          addTodo: this.addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(ListItem, {\n          dense: true,\n          button: true,\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: todo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Edit\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/${todo.name}`,\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Delete\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"delete\",\n              onClick: event => this.deleteTodos(todo.id),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(Route, {\n        path: `/${todo.name}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container__child\",\n          children: [\"Old Todo: - \", todo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(EditTodo, {\n          todo: todo,\n          changeTodoName: this.changeTodoName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        modal: modal,\n        confirmation: this.confirmation,\n        modalMain: modalMain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ruslankalyniak/my-ap/src/component/main/Main.jsx"],"names":["React","TodoForm","Route","Link","EditTodo","Modal","DeleteIcon","IconButton","EditIcon","ListItem","Tooltip","todoList","id","name","Main","Component","state","todos","modal","targetId","modalMain","addTodo","value","setState","prev","length","deleteTodos","confirmation","decision","filter","todo","changeTodoName","map","localStorage","setItem","JSON","stringify","console","log","componentDidMount","result","getItem","parse","render","event"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TodoForm } from '../todoForm';\nimport { Route, Link } from 'react-router-dom';\nimport { EditTodo } from '../editTodo';\nimport { Modal } from '../modal/Modal';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListItem from '@material-ui/core/ListItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './Main.css';\n\nconst todoList = [\n  {id: 1, name: 'test1'},\n  {id: 2, name: 'test2'},\n  {id: 3, name: 'test3'},\n]\n\n\nexport class Main extends React.Component {\n  state = {\n    todos: [\n      ...todoList\n    ],\n    modal: true,\n    targetId: '',\n    modalMain: true,\n\n  }\n\n  addTodo = (value) => {\n    const { todos } = this.state;\n\n    if(value) {\n      this.setState(prev => ({\n        todos: [\n          ...prev.todos,\n          {\n            id: todos[todos.length - 1].id + 1,\n            name: value,\n          }\n        ]\n      }))\n    }\n\n    return;\n  }\n\n  deleteTodos = (id) => {\n  \n    this.setState({\n      targetId: id,\n    })\n\n    this.setState(prev =>({\n      modal: !prev.modal\n    }))\n\n  }\n\n  confirmation = (decision) => {\n    const { targetId } = this.state;\n\n    this.setState(prev =>({\n      modal: !prev.modal\n    }))\n\n    if (decision) {\n      this.setState(prev =>({\n        todos: prev.todos.filter(todo => todo.id !== +targetId)\n      }))\n    }\n  \n  }\n\n  changeTodoName = (name, id) => {\n    \n    this.setState(prev =>({\n      todos: prev.todos.map(todo => {\n        if (todo.id === id) {\n          todo.name = name\n        }\n\n        return todo\n      })\n    }))\n\n     localStorage.setItem('id', JSON.stringify(this.state.todos))\n     console.log(this.state.todos)\n  }\n\n  componentDidMount() {\n    // this.setState({\n    //   todos: this.state.todos.map(todo => {\n    //     if (todo.id === +localStorage.getItem('id')) {\n    //       todo.name = localStorage.getItem('name')\n    //     }\n\n    //     return todo\n    //   })\n    // })\n\n    let result = localStorage.getItem('id')\n    console.log(JSON.parse(result))\n\n    if (result) {\n      console.log(111)\n    } else {\n      console.log(222)\n    }\n  }\n\n  render() {\n    const { todos, modal, modalMain } = this.state;\n\n \n    return (\n      <div className='main'>      \n        <Route>\n          <Link to='/listTodos' className='container__child'>\n            <h1>TODO - List</h1>\n          </Link>\n        </Route>\n        <Route path='/listTodos'>\n          <TodoForm addTodo={this.addTodo} />\n\n          {\n           todos.map(todo => (\n              <ListItem key={todo.id} dense button className='container'>\n                <div className='container'>{todo.name}</div>\n                <Tooltip title=\"Edit\">\n                  <IconButton>\n                    <Link to={`/${todo.name}`}>\n                      <EditIcon />\n                    </Link>\n                  </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Delete\">\n                  <IconButton \n                    aria-label=\"delete\" \n                    onClick={(event) => (\n                      this.deleteTodos(todo.id)\n                    )}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </Tooltip>\n              </ListItem >\n            ))\n          }\n        </Route>\n        {\n          todos.map(todo => (\n            <Route path={`/${todo.name}`}>\n              <div className='container__child'>Old Todo: - {todo.name}</div>\n              <EditTodo todo={todo} changeTodoName={this.changeTodoName} />\n            </Route>\n          ))\n        }\n        <Modal modal={modal} confirmation={this.confirmation} modalMain={modalMain} />\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}