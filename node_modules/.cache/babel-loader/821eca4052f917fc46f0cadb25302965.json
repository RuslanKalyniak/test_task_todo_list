{"ast":null,"code":"var _jsxFileName = \"/Users/ruslankalyniak/my-ap/src/component/editTodo/EditTodo.jsx\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Modal } from '../modal/Modal';\nimport { ModalCancel } from '../modal/ModalCancel';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListItem from '@material-ui/core/ListItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './EditTodo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class EditTodo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: this.props.todo.name,\n      id: this.props.todo.id,\n      nameSave: this.props.todo.name,\n      modal: true,\n      modalEdd: true,\n      modalCancel: true\n    };\n\n    this.editTodo = () => {\n      this.setState(prev => ({\n        modal: !prev.modal\n      }));\n    };\n\n    this.changesEditTodo = () => {\n      this.setState(prev => ({\n        modal: !prev.modal\n      }));\n    };\n\n    this.confirmation = decision => {\n      const {\n        name,\n        id\n      } = this.state;\n      const {\n        changeTodoName\n      } = this.props;\n      this.setState(prev => ({\n        modal: !prev.modal\n      }));\n\n      if (decision) {\n        changeTodoName(name, id);\n      }\n    };\n\n    this.confirmationCancel = () => {\n      this.setState(prev => ({\n        modalCancel: !prev.modalCancel\n      }));\n    };\n\n    this.confirmationCancelDecision = decision => {\n      this.setState(prev => ({\n        modalCancel: !prev.modalCancel\n      }));\n\n      if (decision) {\n        this.setState({\n          name: this.state.nameSave\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      name,\n      modal,\n      modalEdd,\n      modalCancel\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container__child\",\n        children: [\"New Todo: - \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"container__child\",\n          onClick: this.editTodo,\n          children: \"save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"save changes\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: this.editTodo,\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Enter New Todo\",\n          variant: \"outlined\",\n          placeholder: \"enter new todo\",\n          value: name,\n          onChange: event => {\n            this.setState({\n              name: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"delete changes\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"delete\",\n            onClick: this.confirmationCancel,\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        modal: modal,\n        confirmation: this.confirmation,\n        modalEdd: modalEdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCancel, {\n        modal: modalCancel,\n        confirmation: this.confirmationCancelDecision\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ruslankalyniak/my-ap/src/component/editTodo/EditTodo.jsx"],"names":["React","TextField","Modal","ModalCancel","DeleteIcon","IconButton","EditIcon","ListItem","Tooltip","EditTodo","Component","state","name","props","todo","id","nameSave","modal","modalEdd","modalCancel","editTodo","setState","prev","changesEditTodo","confirmation","decision","changeTodoName","confirmationCancel","confirmationCancelDecision","render","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Modal } from '../modal/Modal';\nimport { ModalCancel } from '../modal/ModalCancel';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListItem from '@material-ui/core/ListItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './EditTodo.css';\n\n\nexport class EditTodo extends React.Component {\n  state = {\n    name: this.props.todo.name,\n    id: this.props.todo.id,\n    nameSave: this.props.todo.name,\n    modal: true,\n    modalEdd: true,\n    modalCancel: true,\n  }\n\n  editTodo = () => {\n    this.setState(prev => ({\n      modal: !prev.modal,\n    }))\n  }\n\n  changesEditTodo = () => {\n    this.setState(prev => ({\n      modal: !prev.modal,\n    }))\n  }\n\n  confirmation = (decision) => {\n    const { name, id } = this.state;\n    const { changeTodoName } = this.props;\n\n    this.setState(prev =>({\n      modal: !prev.modal\n    }))\n\n    if (decision) {\n      changeTodoName(name, id)\n    }\n\n  }\n\n  confirmationCancel = () => {\n    this.setState(prev =>({\n      modalCancel: !prev.modalCancel\n    }))\n  }\n\n  confirmationCancelDecision = (decision) => {\n  \n    this.setState(prev =>({\n      modalCancel: !prev.modalCancel\n    }))\n\n    if(decision) {\n      this.setState({\n        name: this.state.nameSave,\n      })\n    }\n  }\n\n  render() {\n    const { name, modal, modalEdd, modalCancel } = this.state;\n\n    return (\n      <div>\n        <div className='container__child'>New Todo: - {name}</div>\n        <div className='container'>\n          <button className='container__child' onClick={this.editTodo}>\n           save changes\n          </button>\n          <Tooltip title=\"save changes\">\n              <IconButton onClick={this.editTodo}>\n                <EditIcon />\n            </IconButton>\n          </Tooltip>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Enter New Todo\"\n            variant=\"outlined\"\n            placeholder='enter new todo'\n            value={name}\n            onChange={(event) => {\n              this.setState({\n               name: event.target.value,\n               })\n            }} \n          />\n          <Tooltip title=\"delete changes\">\n            <IconButton \n                aria-label=\"delete\" \n                onClick={this.confirmationCancel}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n          </div>\n        <Modal modal={modal} confirmation={this.confirmation} modalEdd={modalEdd}/>\n        <ModalCancel modal={modalCancel} confirmation={this.confirmationCancelDecision}/>\n      </div>\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}