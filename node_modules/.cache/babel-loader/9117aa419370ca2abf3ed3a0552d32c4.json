{"ast":null,"code":"var _jsxFileName = \"/Users/ruslankalyniak/my-ap/src/component/mainSreeen/MainSreen.jsx\";\nimport React from 'react';\nimport { TodoForm } from '../todoForm';\nimport { Route, Link } from 'react-router-dom';\nimport { EditTodo } from '../editTodo';\nimport { Modal } from '../modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst todoList = [{\n  id: 1,\n  name: 'test1',\n  title: 'rrrrrrrr'\n}, {\n  id: 2,\n  name: 'test2',\n  title: 'rrrrrrrr'\n}, {\n  id: 3,\n  name: 'test3',\n  title: 'rrrrrrrr'\n}];\nexport class MainScreen extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [...todoList],\n      modal: true,\n      acept: false\n    };\n\n    this.addTodo = value => {\n      const {\n        todos\n      } = this.state;\n\n      if (value) {\n        this.setState(prev => ({\n          todos: [...prev.todos, {\n            id: todos[todos.length - 1].id + 1,\n            name: value,\n            title: 'rrrrrrrr'\n          }]\n        }));\n      }\n\n      return;\n    };\n\n    this.deleteTodos = event => {\n      const targetId = +event.target.value; // this.setState(prev =>({\n      //   todos: prev.todos.filter(todo => todo.id !== targetId)\n      // }))\n\n      this.setState(prev => ({\n        modal: !prev.modal\n      }));\n\n      if (this.state.acept) {\n        this.setState(prev => ({\n          todos: prev.todos.filter(todo => todo.id !== targetId)\n        }));\n      }\n    };\n\n    this.modalX = x => {\n      this.setState(prev => ({\n        modal: !prev.modal,\n        acept: !prev.acept\n      }));\n      console.log(x);\n    };\n  }\n\n  render() {\n    const {\n      todos,\n      modal\n    } = this.state;\n    console.log(todos);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"TODO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/listTodos\",\n        children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n          addTodo: this.addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: todo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/${todo.name}`,\n              children: \"edit Todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            value: todo.id,\n            onClick: event => this.deleteTodos(event),\n            children: \"delete Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(Route, {\n        path: `/${todo.name}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: todo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(EditTodo, {\n          todo: todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        modal: modal,\n        modalX: this.modalX\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/ruslankalyniak/my-ap/src/component/mainSreeen/MainSreen.jsx"],"names":["React","TodoForm","Route","Link","EditTodo","Modal","todoList","id","name","title","MainScreen","Component","state","todos","modal","acept","addTodo","value","setState","prev","length","deleteTodos","event","targetId","target","filter","todo","modalX","x","console","log","render","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TodoForm } from '../todoForm';\nimport {\n  Route,\n  Link\n} from 'react-router-dom';\nimport { EditTodo } from '../editTodo';\nimport { Modal } from '../modal/Modal';\n\nconst todoList = [\n  {id: 1, name: 'test1', title: 'rrrrrrrr'},\n  {id: 2, name: 'test2', title: 'rrrrrrrr'},\n  {id: 3, name: 'test3', title: 'rrrrrrrr'},\n]\n\nexport class MainScreen extends React.Component {\n  state = {\n    todos: [...todoList],\n    modal: true,\n    acept: false,\n  }\n\n  addTodo = (value) => {\n    const { todos } = this.state;\n\n    if(value) {\n      this.setState(prev => ({\n        todos: [\n          ...prev.todos,\n          {\n            id: todos[todos.length - 1].id + 1,\n            name: value,\n            title: 'rrrrrrrr',\n          }\n        ]\n      }))\n    }\n\n    return;\n  }\n\n  deleteTodos = (event) => {\n    const targetId = +event.target.value\n    \n    // this.setState(prev =>({\n    //   todos: prev.todos.filter(todo => todo.id !== targetId)\n    // }))\n\n    this.setState(prev =>({\n      modal: !prev.modal\n    }))\n\n    if(this.state.acept) {\n      this.setState(prev =>({\n        todos: prev.todos.filter(todo => todo.id !== targetId)\n      }))\n    }\n\n  }\n\n  modalX = (x) => {\n    this.setState(prev =>({\n      modal: !prev.modal,\n      acept: !prev.acept,\n\n    }))\n\n    console.log(x)\n  }\n\n  render() {\n    const { todos, modal } = this.state;\n    console.log(todos)\n\n    return (\n      <>      \n        <Route>\n          <h1>TODO</h1>\n        </Route>\n        <Route path='/listTodos'>\n          <TodoForm addTodo={this.addTodo}/>\n          {\n           todos.map(todo => (\n              <>\n                <div>{todo.name}</div>\n                <button>\n                  <Link to={`/${todo.name}`}>\n                    edit Todo\n                  </Link>\n                </button>\n                <button\n                  value={todo.id}\n                  onClick={(event) => (\n                    this.deleteTodos(event)\n                  )}\n                >\n                  delete Todo\n                </button>\n              </>\n            ))\n          }\n        </Route>\n        {\n          todos.map(todo => (\n            <Route path={`/${todo.name}`}>\n              <h2>{todo.name}</h2>\n              <EditTodo todo={todo}/>\n            </Route>\n          ))\n        }\n        <Modal modal={modal} modalX={this.modalX} />\n      </>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}