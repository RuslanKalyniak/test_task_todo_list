{"version":3,"sources":["component/todoForm/TodoForm.jsx","component/modal/Modal.jsx","component/modal/ModalCancel.jsx","component/editTodo/EditTodo.jsx","component/main/Main.jsx","App.jsx","index.js"],"names":["TodoForm","state","newTodo","hendTodo","event","setState","target","value","addNewTodo","e","preventDefault","addTodo","props","this","onSubmit","className","placeholder","onChange","IconButton","type","React","Component","Modal","modal","confirmation","modalEdd","modalMain","hidden","to","Button","variant","color","onClick","ModalCancel","EditTodo","name","todo","id","nameSave","modalCancel","editTodo","prev","changesEditTodo","decision","changeTodoName","confirmationCancel","confirmationCancelDecision","Tooltip","title","TextField","label","aria-label","todoList","Main","todos","targetId","todosN","Math","floor","random","localStorage","setItem","JSON","stringify","deleteTodos","filter","map","parse","getItem","path","ListItem","dense","button","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfcda71f.chunk.js","sourcesContent":["import React from 'react';\nimport NoteAddOutlinedIcon from '@material-ui/icons/NoteAddOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport './todoForm.css';\n\nexport class TodoForm extends React.Component {\n  state = {\n    newTodo: '',\n  }\n\n  hendTodo = (event) => {\n    this.setState({\n      newTodo: event.target.value,\n    })\n  }\n\n  addNewTodo = (e) => {\n    e.preventDefault()\n    const { newTodo } = this.state\n    const { addTodo } = this.props\n\n    addTodo(newTodo)\n\n    this.setState({\n      newTodo: '',\n    })\n  }\n\n  render() {\n    const { newTodo } = this.state;\n\n    return (\n      <>\n       <form onSubmit={this.addNewTodo} className=\"form\">\n         <input\n          value={newTodo}\n          placeholder='write here'\n          onChange={this.hendTodo}\n          className=\"input\"\n        />\n        <div className=\"buttonInput\">\n          <IconButton type='submit'>\n            <NoteAddOutlinedIcon />\n            add todo\n          </IconButton>\n        </div>\n       </form>\n      </>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport './Modal.css';\n\nexport class Modal extends React.Component {\n\n\n  render() {\n    const { modal, confirmation, modalEdd, modalMain } = this.props\n  \n    return (\n      <div className={(modal) ? '' : 'modal'}>\n        <div className='modal__content' hidden={modal}>\n        <p className=\"container__child\" hidden={modal}>{(modalEdd) ? 'save changes' : (modalMain) ? 'delete todo' : ''}</p>\n            <Link to='/listTodos' >\n              <Button\n                className=\"ml-5\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => (\n                  confirmation(true)\n                )}>\n                Yes\n              </Button>\n            </Link>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => (\n                confirmation(false)\n              )}>\n              No\n            </Button>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport './Modal.css';\n\nexport class ModalCancel extends React.Component {\n\n\n  render() {\n    const { modal, confirmation} = this.props\n  \n    return (\n      <div className={(modal) ? '' : 'modal'}>\n        <div className='modal__content' hidden={modal}>\n        <p hidden={modal} className=\"container__child\">cancel changes</p>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => (\n                confirmation(true)\n              )}\n            >\n              Yes\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => (\n                confirmation(false)\n              )}>\n              No\n            </Button>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Modal } from '../modal/Modal';\nimport { ModalCancel } from '../modal/ModalCancel';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './EditTodo.css';\n\n\nexport class EditTodo extends React.Component {\n  state = {\n    name: this.props.todo.name,\n    id: this.props.todo.id,\n    nameSave: this.props.todo.name,\n    modal: true,\n    modalEdd: true,\n    modalCancel: true,\n  }\n\n  editTodo = () => {\n    this.setState(prev => ({\n      modal: !prev.modal,\n    }))\n  }\n\n  changesEditTodo = () => {\n    this.setState(prev => ({\n      modal: !prev.modal,\n    }))\n  }\n\n  confirmation = (decision) => {\n    const { name, id } = this.state;\n    const { changeTodoName } = this.props;\n\n    this.setState(prev =>({\n      modal: !prev.modal\n    }))\n\n    if (decision) {\n      changeTodoName(name, id)\n    }\n\n  }\n\n  confirmationCancel = () => {\n    this.setState(prev =>({\n      modalCancel: !prev.modalCancel\n    }))\n  }\n\n  confirmationCancelDecision = (decision) => {\n  \n    this.setState(prev =>({\n      modalCancel: !prev.modalCancel\n    }))\n\n    if(decision) {\n      this.setState({\n        name: this.state.nameSave,\n      })\n    }\n  }\n\n  render() {\n    const { name, modal, modalEdd, modalCancel } = this.state;\n\n    return (\n      <div>\n        <div className='container__child'>New Todo: - {name}</div>\n        <div className='container'>\n          <Tooltip title=\"save changes\">\n              <IconButton onClick={this.editTodo}>\n                <SaveIcon />\n            </IconButton>\n          </Tooltip>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Enter New Todo\"\n            variant=\"outlined\"\n            placeholder='enter new todo'\n            value={name}\n            onChange={(event) => {\n              this.setState({\n               name: event.target.value,\n               })\n            }} \n          />\n          <Tooltip title=\"delete changes\">\n            <IconButton \n                aria-label=\"delete\" \n                onClick={this.confirmationCancel}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n          </div>\n        <Modal modal={modal} confirmation={this.confirmation} modalEdd={modalEdd}/>\n        <ModalCancel modal={modalCancel} confirmation={this.confirmationCancelDecision}/>\n      </div>\n\n    )\n  }\n}\n","import React from 'react';\nimport { TodoForm } from '../todoForm';\nimport { Route, Link } from 'react-router-dom';\nimport { EditTodo } from '../editTodo';\nimport { Modal } from '../modal/Modal';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListItem from '@material-ui/core/ListItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './Main.css';\n\nconst todoList = [\n  {id: 1, name: 'test1'},\n  {id: 2, name: 'test2'},\n  {id: 3, name: 'test3'},\n]\n\n\nexport class Main extends React.Component {\n  state = {\n    todos: [\n      ...todoList\n    ],\n    modal: true,\n    targetId: '',\n    modalMain: true,\n    todosN: [],\n\n  }\n\n  addTodo = (value) => {\n\n    if(value) {\n      this.setState(prev => ({\n        todos: [\n          ...prev.todos,\n          {\n            id: Math.floor(Math.random() * 100),\n            name: value,\n          }\n        ]\n      }))\n\n      localStorage.setItem('id', JSON.stringify(this.state.todos))\n    }\n\n    return;\n  }\n\n  deleteTodos = (id) => {\n  \n    this.setState({\n      targetId: id,\n    })\n\n    this.setState(prev =>({\n      modal: !prev.modal\n    }))\n\n    localStorage.setItem('id', JSON.stringify(this.state.todos))\n  }\n\n  confirmation = (decision) => {\n    const { targetId } = this.state;\n\n    this.setState(prev =>({\n      modal: !prev.modal\n    }))\n\n    if (decision) {\n      this.setState(prev =>({\n        todos: prev.todos.filter(todo => todo.id !== +targetId)\n      }))\n    }\n  \n  }\n\n  changeTodoName = (name, id) => {\n    \n    this.setState(prev =>({\n      todos: prev.todos.map(todo => {\n        if (todo.id === id) {\n          todo.name = name\n        }\n\n        return todo\n      })\n    }))\n\n    localStorage.setItem('id', JSON.stringify(this.state.todos))\n  }\n\n  componentDidMount() {\n      this.setState({\n        todos: (JSON.parse(localStorage.getItem('id')) ? JSON.parse(localStorage.getItem('id')) : todoList)\n      })\n  }\n\n  render() {\n    const { todos, modal, modalMain } = this.state;\n\n \n    return (\n      <div className='main'>      \n        <Route>\n          <Link to='/listTodos' className='container__child'>\n            <h1>TODO - List</h1>\n          </Link>\n        </Route>\n        <Route path='/listTodos'>\n          <TodoForm addTodo={this.addTodo} />\n\n          {\n           (todos).map(todo => (\n              <ListItem key={todo.id} dense button className='container'>\n                <div className='container'>{todo.name}</div>\n                <Tooltip title=\"Edit\">\n                  <IconButton>\n                    <Link to={`/${todo.name}`}>\n                      <EditIcon />\n                    </Link>\n                  </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Delete\">\n                  <IconButton \n                    aria-label=\"delete\" \n                    onClick={(event) => (\n                      this.deleteTodos(todo.id)\n                    )}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </Tooltip>\n              </ListItem >\n            ))\n          }\n        </Route>\n        {\n          todos.map(todo => (\n            <Route path={`/${todo.name}`}>\n              <div className='container__child'>Old Todo: - {todo.name}</div>\n              <EditTodo todo={todo} changeTodoName={this.changeTodoName} />\n            </Route>\n          ))\n        }\n        <Modal modal={modal} confirmation={this.confirmation} modalMain={modalMain} />\n      </div>\n    )\n  }\n}","import React from 'react';\nimport './App.css';\nimport { Main } from './component/main/Main';\n\nexport class App extends React.Component {\n  render() {\n    return(\n      <Main />\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}